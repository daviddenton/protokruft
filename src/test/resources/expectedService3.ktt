package org.protokruft.example3

import com.mygreat.Interface
import io.grpc.Channel
import io.grpc.stub.StreamObserver

interface CatService : Interface {
    fun getLeg(cat: Example3.Cat): Example3.Leg

    object Grpc {
        object Client {
            operator fun invoke(channel: Channel): CatService {
                val stub = CatServiceGrpc.newBlockingStub(channel)
                return object : CatService {
                            override fun getLeg(cat: org.protokruft.example3.Example3.Cat): org.protokruft.example3.Example3.Leg = stub.getLeg(cat)
                        }
            }
        }

        class Server(private val delegate: CatService) : CatServiceGrpc.CatServiceImplBase() {
            override fun getLeg(cat: Example3.Cat, responseObserver: StreamObserver<Example3.Leg>) {
                responseObserver.onNext(delegate.getLeg(cat))
                responseObserver.onCompleted()
            }
        }
    }
}
