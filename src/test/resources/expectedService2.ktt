package org.protokruft.example2

import io.grpc.Channel
import io.grpc.stub.StreamObserver

interface PersonService {
    fun getAddress(person: Example2.Person): Example2.Address

    object Grpc {
        class Client : PersonService {
            private val stub: PersonServiceGrpc.PersonServiceBlockingStub

            constructor(channel: Channel) {
                stub = PersonServiceGrpc.newBlockingStub(channel)
            }

            override fun getAddress(person: Example2.Person): Example2.Address = stub.getAddress(person)
        }

        class Server(private val delegate: PersonService) : PersonServiceGrpc.PersonServiceImplBase() {
            override fun getAddress(person: Example2.Person, responseObserver: StreamObserver<Example2.Address>) {
                responseObserver.onNext(delegate.getAddress(person))
                responseObserver.onCompleted()
            }
        }
    }
}
